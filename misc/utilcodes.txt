Call seqSetSeq
==============
(use with activator)
C0000000 0000000A
9421FF80 7C6802A6
BC610008 48000015
8017C074 6D61635F
30320073 61766500
7D6802A6 818B0000
7D8903A6 38600003
388B0004 38AB000B
4E800421 B8610008
7C6803A6 38210080
4E800020 00000000

.set seqSetSeq, 0x8017c074

stwu r1, -0x80 (r1)
mflr r3
stmw r3, 0x8 (r1)

bl enddata
startdata:
func:
.long seqSetSeq
mapname:
.string "mac_02"
doorname:
.string "save"
.align 2
enddata:

mflr r11
lwz r12, func - startdata (r11)
mtctr r12
li r3, 3
addi r4, r11, mapname - startdata
addi r5, r11, doorname - startdata
bctrl

lmw r3, 0x8 (r1)
mtlr r3
addi r1, r1, 0x80
blr

Enable debug_put_msg command
============================
C20DD518 00000006
7C641B78 4800000D
25730A00 8025CE00
7C6802A6 80030004
7C0803A6 4CC63182
4E800021 80010014
60000000 00000000

C2 @ 800DD518
mr r4, r3
bl afterstring

.string "%s\n"
#printf pointer
.long 0x8025ce00

afterstring:
mflr r3
lwz r0, 0x4 (r3)
mtlr r0
crclr 6
blrl

#default instruction
lwz r0, 20(r1)

Print Event Commands Executed
=============================
C20DDD9C 00000007
7F8902A6 5404F0BE
48000011 636D6420
25780A00 8025CE00
7C6802A6 81830008
7D8803A6 4CC63182
4E800021 7F8903A6
4E800420 00000000

C2 @ 800DDD9C
mfctr r28
rlwinm r4, r0, 30, 2, 31
bl endstring

.string "cmd %x\n"
#printf pointer
.long 0x8025ce00

endstring:
mflr r3
lwz r12, 8 (r3)
mtlr r12
crclr 6
blrl
mtctr r28
bctr

Dump Map Script Locations
=========================
C223E5D8 0000000D
4E800421 9421FFF0
93810008 9361000C
48000015 8025CE00
804031B4 25733A20
25780A00 7FE802A6
83DF0004 83BF0000
3B8001D4 84BE0004
80850000 80BF0018
387F0008 4CC63182
7FA803A6 4E800021
379CFFFF 4181FFE0
83810008 8361000C
38210010 00000000

C2 @ 0x8023e5d8

# r3-12, r31 and r30 free

.set PRINTF, 0x8025ce00
.set MAPDATALIST, 0x804031b8

# default instruction
bctrl

# backup r28 & r29
stwu r1, -16 (r1)
stw r28, 8 (r1)
stw r27, 12 (r1)

# get data pointers
bl enddata

startdata:
printf:
.long PRINTF
mapdatalist:
.long MAPDATALIST - 4 # offset for lwzu
format:
.string "%s: %x\n"
.align 2
enddata:

mflr r31
lwz r30, mapdatalist - startdata (r31)
lwz r29, printf - startdata (r31)
li r28, 0x1d4

# print each name and script
looptop:
lwzu r5, 4 (r30) # get map data entry
lwz r4, 0 (r5) # map name
lwz r5, 0x18 (r31) # map script
addi r3, r31, format - startdata
crxor 6, 6, 6
mtlr r29
blrl
subic. r28, r28, 1
bgt+ looptop

# pop stack
lwz r28, 8 (r1)
lwz r27, 12 (r1)
addi r1, r1, 16

